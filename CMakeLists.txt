#
#    This file is part of RTCore, an open-source physically based
#    renderer.
#   
#    Copyright (c) 2020-2021 Samuel Van Allen - All rights reserved.
#   
#    Ether is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#   
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#   
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   

cmake_minimum_required (VERSION "3.14.4")

# =========================================================================== #
#                     PROJECT DEFINITIONS & PROPERTIES                        #
# =========================================================================== #

# Setup the name of the solution. This will change some of the directories naming convention
# generated by CMake. Ignore CXX in the second param since CMake supports C++ by default
project (RTCore)
set_property(DIRECTORY PROPERTY VS_STARTUP_PROJECT ${PROJECT_NAME})

# Sets the C++ versions
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

# Set the project source directories. This is set when running the CMake GUI
set(RTC_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR})

# Enable multi-thread compiling.
include(ProcessorCount)
ProcessorCount(N)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /MP${N}")

set_property(GLOBAL PROPERTY USE_FOLDERS ON)

# =========================================================================== #
#                        ADD SOURCE FILES TO PROJECT                          #
# =========================================================================== #

include_directories("${RTC_SOURCE_DIR}/src")
include_directories("${RTC_SOURCE_DIR}/include")

# Find all source files and group them by directory
# I have no clue how this actually works, this macro was taken from SORT
macro (source_group_by_dir source_files)
    set(sgbd_cur_dir ${RTC_SOURCE_DIR}/src)
    foreach (sgbd_file ${${source_files}})
	    string(REGEX REPLACE ${sgbd_cur_dir}/\(.*\) \\1 sgbd_fpath ${sgbd_file})
	    string(REGEX REPLACE "\(.*\)/.*" \\1 sgbd_group_name ${sgbd_fpath})
	    string(COMPARE EQUAL ${sgbd_fpath} ${sgbd_group_name} sgbd_nogroup)
	    string(REPLACE "/" "\\" sgbd_group_name ${sgbd_group_name})
	    if (sgbd_nogroup)
	        set(sgbd_group_name "\\" )
	    endif (sgbd_nogroup)
	    source_group(${sgbd_group_name} FILES ${sgbd_file})
    endforeach (sgbd_file)
endmacro (source_group_by_dir)

file(GLOB_RECURSE project_headers src/*.h)
file(GLOB_RECURSE project_cpps src/*.cpp)

set(all_files ${project_headers} ${project_cpps})
source_group_by_dir(all_files)

# =========================================================================== #
#                   SETUP THIRD PARTY/EXTERN DEPENDENCIES                     #
# =========================================================================== #

include_directories("${ETH_SOURCE_DIR}/include")

file(GLOB_RECURSE stb include/stb/*)
set(stb_files ${stb})

# =========================================================================== #
#                          SET COMPILATION TARGETS                            #
# =========================================================================== #

add_executable(${PROJECT_NAME} ${all_files})

# Set output name for different configs
set_target_properties (${PROJECT_NAME} PROPERTIES RELEASE_OUTPUT_NAME "rtcore_r")
set_target_properties (${PROJECT_NAME} PROPERTIES DEBUG_OUTPUT_NAME "rtcore_d")

# Define platform
if(WIN32)
    target_compile_definitions(${PROJECT_NAME} PUBLIC RTC_PLATFORM_WIN)
elseif(APPLE)
    target_compile_definitions(${PROJECT_NAME} PUBLIC RTC_PLATFORM_MAC)
elseif(UNIX)
    target_compile_definitions(${PROJECT_NAME} PUBLIC RTC_PLATFORM_LINUX)
endif()

# =========================================================================== #
#                          LINK EXTERNAL LIBRARIES                            #
# =========================================================================== #

# Nothing to link